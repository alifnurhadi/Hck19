version: '3.8' 

x-airflow-common: &airflow-common
  build:
    context: .
    dockerfile: dockerfile
  user: "${AIRFLOW_UID:-50000}:0"
  env_file: 
    - .env
  volumes:
    - ./dags:/opt/airflow/dags
    - ./logs:/opt/airflow/logs
    - ./plugins:/opt/airflow/plugins
    - ./data:/opt/airflow/data
    - ./models:/opt/airflow/models
  depends_on:
    postgres:
      condition: service_healthy
  networks:
    - final-project

services:
  postgres:
    image: postgres:13
    container_name: postgres
    ports:
      - "5400:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "milestone_3rd"]
      interval: 5s
      retries: 5
    env_file:
      - .env
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - final-project

  airflow-webserver:
    <<: *airflow-common
    command: webserver
    container_name: airflow-webserver
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  airflow-scheduler:
    <<: *airflow-common
    command: scheduler
    container_name: airflow-scheduler
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8974/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  airflow-init:
    <<: *airflow-common
    container_name: airflow-init
    entrypoint: /bin/bash
    command:
      - -c
      - |
        mkdir -p /opt/airflow/{logs,dags,plugins}
        chown -R "${AIRFLOW_UID}:0" /opt/airflow/{logs,dags,plugins}
        airflow db init
        airflow users create \
          --username ${AIRFLOW__WEBSERVER__USERNAME} \
          --password ${AIRFLOW__WEBSERVER__PASSWORD} \
          --firstname Airflow \
          --lastname Admin \
          --role Admin \
          --email admin@example.com
        exec /entrypoint airflow version
        
networks:
  final-project:
    driver: bridge

volumes:
  postgres-data: